%calculates the profile of the flame in 3 dimensions.
%PARAMETERS:    
%   this: FlameProfile object
%   result: (optional) 
%       result='figure'makes the 3Dgraph of the flame.
%       result= anything else returs the points in z
%   aprox_type: indicates what type of graph should be created
%        aprox_type=1 makes the graph that follows the profile of the graph
%           creating demi-ellipses crossing the flame and a circle on the
%           base
%        aprox_type=2 makes a graph of a paraboloid with a base that is not
%           fixed
%        aprox_type=3 makes the graph that follows the profile of the graph
%           creating demi-ellipses crossing the flame and a circle on the
%           base, bellow which a cylinder that begins at the high of electrodes
%        aprox_type=4 makes a graph of a paraboloid with a base that is 
%           fixed at the high of the electrodes
%        aprox_type=5 makes a graph of a paraboloid with a base that is not
%           fixedm and bellow it a cylinder that begins at the high of electrodes
%   x,y: (optional) x and y coordinates for doing the calculation
%get3DPoint(this) -> makes the calcule of the flame profile using the x
%points that define the flame.
%
function [z winsize]=get3DPoint(this,aprox_type,result,x,y)
R=this.R;
if(R>0)
    if(nargin<=3)
        r=0:R*1.01/100:R*1.01;
        theta=0:pi/50:2*pi;
        x=r'*cos(theta);
        y=r'*sin(theta);
    end

    dim=size(x);

    [x_ m n]= unique(x);

    switch(aprox_type)
        case {1,3}
            c=getPointOnFlameFront(this,x_');
            c=reshape(c(n),dim);
            b=(R^2-x.^2).^0.5;
            zz=c.*(1-(y./b).^2).^0.5+this.ymin;
            zz(imag(zz)~=0)=nan;
        case{2,5}
            ymax=max(this.y);
            zz=-ymax*(x.^2 +y.^2)/this.R^2+ymax+this.ymin;
            zz(imag(zz)~=0)=nan;
        case 4
            ymax=max(this.y) + this.ymin;
            zz=-ymax*(x.^2 +y.^2)/this.R^2+ymax;
            zz(imag(zz)~=0)=nan;
        otherwise
            error('aprox_type must be integer 1-5');
    end
    
    
    time=this.time;


    if(nargout==0)
        createfigure(x,y,zz,figure(1),time);
    end

    if(nargout>=1)
        if(strcmp(result,'figure'))
            z=figure(1);
            winsize = get(figure(1),'Position');
            createfigure(x,y,zz,figure(1),time);
            if(aprox_type==3 || aprox_type==5)
                hold on;
                [X,Y,Z] = cylinder(this.R,30);
                surf(X,Y,Z*this.ymin);
                hold off;
            end
        else
            z=zz;
        end
    end
else
    z=figure(1);
    winsize = get(figure(1),'Position');
end  
    
    

function createfigure(x, y, z, figure1, time)
%CREATEFIGURE(XDATA1,YDATA1,ZDATA1,CDATA1)
%  XDATA1:  surface xdata
%  YDATA1:  surface ydata
%  ZDATA1:  surface zdata
%  CDATA1:  surface cdata

%  Auto-generated by MATLAB on 10-May-2011 16:40:53
clf;
set(figure1,'NumberTitle','off');
set(figure1,'Name','3DFlame');
set(figure1,'Position',[0    85   375   733]);


% Create axes
minz=min(reshape(z,size(z,1)*size(z,2),1));
maxz=max(reshape(z,size(z,1)*size(z,2),1));
axes1 = axes('Parent',figure1,'YTick',[-3.5 -2 -0.5 1 2.5 3.5],...
    'XTick',[-3.5 -2 -0.5 1 2.5 3.5],...
    'Position',[0.213451937589868 0.0951198173082627 0.490548062410132 0.853260869565217],...
    'CLim',[minz maxz]);



xlim(axes1,[-3.5 3.5]);
ylim(axes1,[-3.5 3.5]);
zlim(axes1,[0 80]);

view(axes1,[22.5 6]);
grid(axes1,'on');
hold(axes1,'all');

% Create surf

surf(x,y,z,'Parent',axes1,'LineStyle',':');

set(figure1,'Colormap',jet);
% Create xlabel
xlabel('x(cm)','HorizontalAlignment','right');

% Create ylabel
ylabel('y(cm)','HorizontalAlignment','left');

% Create zlabel
zlabel('z(cm)');

% Create title
title(['t=' num2str(time) ' seconds']);

colormap('hot');
colorbar('peer',axes1,...
    [0.867920227920227 0.111468530210551 0.0468207751824022 0.853260869565217]);
